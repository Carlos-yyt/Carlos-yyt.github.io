<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[每当我跑进紫金山……]]></title>
    <url>%2F2019%2F05%2F30%2FRunning-in-ZiJinMountain%2F</url>
    <content type="text"><![CDATA[在紫金山跑步紫金山绿道 初体验第一次了解到中山陵绿道，是通过南农马拉松协会。大一入校的时候，出于兴趣加了马协的群。但是被成员的训练量吓到了，一言不合10公里20公里，配速4-5，跟着实在是吃力。所以一直默默窥屏。后来发现他们的打卡图经常是在山里，百度了一下，原来学校北门就是30公里的绿道啊。 我的家乡是淮安。淮安市是典型的平原地形，四条河流穿城而过，市区就有50多座桥。我家小区的西门外是古运河观光带，东门外是钵池山（一个围绕周长5公里的人工湖建造的开放式公园）。所以我中学经常沿着岸边跑步。夏天从水面吹来的风很凉爽，平直的跑道也适合无意识的长跑。 但是，我还从来没有在山中跑过。好奇心战胜了对于马协训练量的恐惧，我决定参加一次马协的日常训练。 如果没记错的话，那一次应该是穿着GT2000跑了9公里。当时体重还没有降下来，平时疏于锻炼导致腿部力量薄弱，GT2000的GEL胶在夏天又软到卸力。跑惯了平地，对于大起伏的路线毫无经验。所以那一次跑得很吃力，把马协的速度都拖慢了。后来就再也没有参加过233 探索路线紫金山就像一个体力的黑洞，进入瞎跑很容易就把体力耗尽。既然每次只能跑一小时，可以体验的路段就十分有限。就像因为胃的容量有限所以出去玩会先选好餐厅，后来我开始有意识地探索紫金山的路线。 花费了十次左右的试探，最后选中了这条路线：从宿舍跑到中山陵，再回到宿舍，大概是7.5公里。最后再在操场上恣意地冲刺几次，刚好10公里。没有选择绿道，因为绿道比较窄，让我感觉比较压抑。这条路线基本都是柏油路，尤其是上了陵园路之后非常的开阔，让人的心情都变得很好。最后登上中山陵，回看下马坊，时有感慨。 每当我跑进紫金山……南农很小，在里面生活总会感觉很局促。日常生活也总是有各种烦恼缠身。久而久之，就有种窒息的氛围，盼望着可以从生活这口热锅中跳出去，喘口气、凉一凉再回去。于是我向着山上跑。出了校门，沿着博爱路缓缓爬坡，静静感受着身体里面的齿轮逐渐转动起来，仿佛将日常琐碎都置入其间，和疲劳一起碾碎。如果出了汗，山风再一吹，整个人都透明了。到了陵园路，道路再一次打开，平整的泊油路像可靠的老友，你大可以放心地把步伐托付给他，然后淡淡地想着平日的琐事。这件事想想，放下，再把那件事提起来琢磨一下。就像吃冰淇淋，并不很着急，一次一点点。 就这么一直跑，跑到了天下为公四个大字下面。一定要摸一下门把，这个简单的仪式就像是在和铁门说：我又来了。回首下马坊，那正是自己喜怒哀乐的地方呀！站在这里了以上帝视角审视自己的生活，痛苦也变得可爱了起来。轻轻地想着自己的追求和无奈，也可以带着微笑。 歇够了，终是要回去的。带着新的冲动和期望，下山路也变得让人兴奋！此去经年，应是无怨无悔。]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>跑步</tag>
        <tag>运动</tag>
        <tag>大二</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[const]]></title>
    <url>%2F2019%2F05%2F25%2Fconst%2F</url>
    <content type="text"><![CDATA[const与指针及函数cppreference-zh-201806 中的简单定义 const 对象——类型为 const-qualified 的对象，或 const 对象的非 mutable 子对象。这种对象不能修改：尝试直接这么做是编译时错误，且尝试间接这么做（例如通过到非 const 类型的引用或指针修改 const 对象）导致未定义行为。 const与指针声明指针时，在类型前或后都可以使用关键字const，也可在两个位置都使用。例如，下面都是合法的声明，但是含义大不同：123const int * pOne; //指向整形常量 的指针，它指向的值不能修改int * const pTwo; //指向整形的常量指针 ，它不能在指向别的变量，但指向（变量）的值可以修改。 const int *const pThree; //指向整形常量 的常量指针 。它既不能再指向别的常量，指向的值也不能修改。 const与函数《代码大全》说：代码是写给人看到的，我觉得const的设计就出于这个目的。即，通过避免人为的失误来提升程序的健壮性。从这个角度出发，很多设计的合理性就显而易见了。 用const修饰函数的参数应用背景我们经常会将自定义类型作为函数参数。如果使用值传递，则会产生临时对象。临时对象的构造、复制、析构过程都将消耗资源。因此，我们会使用引用传递来避免这个开销。引用传递意味着我们可以修改实参的值，我们有时候并不希望这件事发生，需要限制函数体对实参的修改的能力。 应用方法在引用传递的基础上加上const关键词，即：const A &amp;a。这个语法中兼备了高效和安全。其中，&amp;保证了高效，const缩小了权限，从而保证了安全。 错误的应用 void f(const int a) 值传递本身就意味着对形参的修改不会影响实参。写法并非错误，事实上在某些场合也具备意义。但是对于避免影响形参这个目的，是无意义的。 void f(const int &amp;a) 像int这样的内部类型作为函数参数被传递时，不存在构造、复制、析构的过程，复制的速度非常快。这种写法和void f(int a)的效率几乎相当。写法并非错误，事实上在某些场合也具备意义。但是对于安全又高效地使用实参这个目的，是无意义的。用const修饰函数的返回值申明格式为const A* GetA(void);。和上一节同理，也是为了更安全地使用&amp;。引用传递返回值一般出现在链式表达中，const则限制了不正常的链式表达。 程序举例： 123456789101112class A&#123; A&amp; operate = (const A &amp;other);// 赋值函数&#125;;int main()&#123; A a, b, c; // a, b, c 为A的对象 a= b = c; // 正常的链式赋值 (a= b) = c; // 不正常的链式赋值，但合法。如果将赋值函数的返回值加const修饰，那么该返回值的内容不允许被改动。语句a= b = c 仍然正确，但是语句(a= b) = c 则是非法的。 return 0;&#125; 用const修饰成员函数申明格式举例：int C::f(void) const;。作用是：f函数不可以修改数据成员，或者调用其它非const成员函数。 程序举例： 12345678910111213141516class Stack&#123; public: void Push(int elem); int Pop(void); int GetCount(void) const; // const 成员函数 private: int m_num; int m_data[100];&#125;; int Stack::GetCount(void)const &#123; ++ m_num; // 编译错误，企图修改数据成员m_num Pop();// 编译错误，企图调用非const函数 return m_num;&#125; 为什么const放在后面？因为const在修饰成员函数时，其实修饰的是*this。而this没有显式地写出来，所以就放在后面了（个人理解）。 如果调用了非const成员函数，VS2017会报类似于这样的错误： error C2662: “CDate::COMPARE CDate::comparef(CDate,const CDate &amp;)”: 不能将“this”指针从“const CDate”转换为“CDate &amp;” 注意：const不能修饰静态成员函数。而静态成员函数属于类而非对象，因此不可以被const修饰。 参考来源 https://www.cnblogs.com/azbane/p/7266747.html https://www.cnblogs.com/lihuidashen/p/4378884.html https://www.cnblogs.com/kiplove/p/6875371.html]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Like a Rolling Stone]]></title>
    <url>%2F2019%2F03%2F28%2FLike-a-rolling-stone%2F</url>
    <content type="text"><![CDATA[Like a Rolling StoneOnce upon a time you dressed so fineThrew the bums a dime in your prime, didn’t you?People call, say, “Beware doll, you’re bound to fall”You thought they were all kiddin’ youYou used to laugh aboutEverybody that was hangin’ outNow you don’t talk so loudNow you don’t seem so proudAbout having to be scrounging for your next mealHow does it feelHow does it feelTo be without a homeLike a complete unknownLike a rolling stoneYou’ve gone to the finest school all right, Miss LonelyBut you know you only used to get juiced in itAnd nobody has ever taught you how to live on the streetAnd now you’re gonnahave to get used to itYou said you’d never compromiseWith the mystery tramp, but now you realizeHe’s not selling any alibiesAs you stare into the vacuum of his eyesAnd say do you want to make a deal?How does it feelHow does it feelTo be on your ownWith no direction homeLike a complete unknownLike a rolling stoneOh,you never turned around to see the frownsOn the jugglers and the clowns when they did tricks for youYou never understood that it ain’t no goodYou shouldn’t let other people get your kicks for youYou used to ride on the chrome horse with your diplomatWho carried on his shoulder a Siamese catAin’t it hard when you discover thatHe really wasn’t where it’s atAfter he took from you everything he could stealHow does it feelHow does it feelHave to be on your ownWith no direction homeLike a complete unknownLike a rolling stonePrincess on the steeple and all the pretty peopleThey’re drinkin’, thinkin’ that they’ve got it madeExchanging all kinds of precious gifts and thingsBut you’d better lift your diamond ring, you’d better pawn it babeYou used to be so amusedAt Napoleon in rags and the language that he usedGo to him now, he calls you, you can’t refuseWhen you got nothing, you got nothing to loseYou’re invisible now, you’ve got no secrets to concealHow does it feelHow does it feelTo be no your ownWith no direction homeLike a complete unknownLike a rolling stone]]></content>
      <tags>
        <tag>literature</tag>
      </tags>
  </entry>
</search>
